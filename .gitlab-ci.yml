variables:
  IMAGE_NAME: cyberslot/app-repo
  IMAGE_TAG: python-app-1.0

stages:
  - test
  - build
  - helm-package
  - publish
  - deploy

.run_tests:
  stage: test
  image: python:3.9-slim-buster
  ## image: python:3.12.0a3-slim-bullseye
  before_script:
    - apt update && apt install make
  script:
    - make test
  ### Server part
  # artifacts:
  #   paths:
  #   - src/script.sh

### Server part
# build_image:
#   stage: build
#   image: docker:20.10.22
#   services:
#     - docker:20.10.22-dind
#   variables:
#     DOCKER_TLS_CERTDIR: "/certs"
#   before_script:
#     - docker login -u $REGISTRY_USER -p $REGITSRY_PASS
#   script:
#     - docker build -t $IMAGE_NAME:$IMAGE_TAG .
#     - docker push $IMAGE_NAME:$IMAGE_TAG

### Kubernetes part
### - Kaniko build
.build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:v1.9.1-debug
    entrypoint: [""]
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/Dockerfile"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_TAG}"
  ## -- If active, prevents the stage from implementation! -- ##
  ## rules:
  ##   - if: $CI_COMMIT_TAG
  ## --------------------------------------------- ##
### - Helm chart
.package:
  stage: helm-package
  image: alpine/helm:3.10.2
  script:
    - cd kubernetes/deploy/helm-chart
    - helm package .

.publish:
  stage: publish
  image: curlimages/curl:latest
  script:
    - 'curl --request POST --user gitlab-ci-token:$CI_JOB_TOKEN --form "chart=@kubernetes/deploy/webapp-1.4.3.tgz" "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/api/stable/charts"'

deploy:
  stage: deploy

  ### Server part
  # before_script:
  #   - chmod 400 $SSH_KEY
  # script:
  #   - scp -o StrictHostKeyChecking=no -i $SSH_KEY src/script.sh root@10.133.108.111:/root
  #   - ssh -o StrictHostKeyChecking=no -i $SSH_KEY root@10.133.108.111 "
  #     docker login -u $REGISTRY_USER -p $REGITSRY_PASS &&
  #     chmod 700 script.sh &&
  #     . script.sh"

  ### Kubernetes part
  ### - Manifests (NOT CONFIRUED!)
  # image:
  #   name: bitnami/kubectl:latest
  #   entrypoint: [""]
  # script:
  #   - kubectl config get-contexts
  #   - kubectl config use-context cyberslot/ci_cd-crash-course/repository:k8s-agent-cicd
  #   - kubectl get pods

  ### - Helm chart from Project Repo
  # image: alpine/helm:3.10.2
  # script:
  #   - helm upgrade webapp ./kubernetes/deploy/helm-chart/ --install --set-string image.tag=${CI_COMMIT_TAG} --namespace webapp --timeout 30m0s
  # rules:
  #   - if: $CI_COMMIT_BRANCH == 'main'
  #     when: always

  ### - Helm package (chart) from Package Registry
  image: alpine/helm:3.10.2
  script:
    # - helm repo add --username $CI_REGISTRY_USER --password $CI_REGISTRY_PASSWORD ci_cd-crash-course "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/helm/stable"
    # - helm install webapp ci_cd-crash-course/webapp

    - helm repo add benc-uk https://benc-uk.github.io/helm-charts
    - helm install demo benc-uk/webapp --values myapp.yaml
