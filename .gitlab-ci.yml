variables:
  IMAGE_NAME: cyberslot/app-repo
  IMAGE_TAG: python-app-1.0

stages:
  - test
  - build
  # - deploy

run_tests:
  stage: test
  image: python:3.9-slim-buster
  # image: python:3.12.0a3-slim-bullseye
  before_script:
    - apt update && apt install make
  script:
    - make test
  artifacts:
    paths:
      ### Server part
      # - src/script.sh
      ### Kubernetes part
      - Dockerfile

### Server part
# build_image:
#   stage: build
#   image: docker:20.10.22
#   services:
#     - docker:20.10.22-dind
#   variables:
#     DOCKER_TLS_CERTDIR: "/certs"
#   before_script:
#     - docker login -u $REGISTRY_USER -p $REGITSRY_PASS
#   script:
#     - docker build -t $IMAGE_NAME:$IMAGE_TAG .
#     - docker push $IMAGE_NAME:$IMAGE_TAG

### Kubernetes part
build_image1:kubectl:
  stage: build
  image:
    name: bitnami/kubectl:latest
    entrypoint: [""]
  script:
    - kubectl config get-contexts
    - kubectl config use-context cyberslot/CI_CD-Crash-Course:k8s-agent-cicd
    - kubectl get pods
    # ------ Temporary ------- #
    # - pwd
    # - ls -lha
    # ------------------------ #
    - kubectl apply -f kubernetes/build/kaniko-dir.yaml
build_image2:docker:
  stage: build
  image:
    name: docker:20.10.22
  services:
    - docker:20.10.22-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs"
  before_script:
    - docker login -u $REGISTRY_USER -p $REGITSRY_PASS
  script:
    - docker build -t $IMAGE_NAME:$IMAGE_TAG .
    - docker push $IMAGE_NAME:$IMAGE_TAG
# deploy:
#   stage: deploy

### Server deployment
# before_script:
#   - chmod 400 $SSH_KEY
# script:
#   - scp -o StrictHostKeyChecking=no -i $SSH_KEY src/script.sh root@10.133.108.111:/root
#   - ssh -o StrictHostKeyChecking=no -i $SSH_KEY root@10.133.108.111 "
#     docker login -u $REGISTRY_USER -p $REGITSRY_PASS &&
#     chmod 700 script.sh &&
#     . script.sh"

### Kubernetes deployment
# image:
#   name: bitnami/kubectl:latest
#   entrypoint: [""]
# script:
#   - kubectl config get-contexts
#   - kubectl config use-context cyberslot/ci_cd-crash-course/repository:k8s-agent-cicd
#   - kubectl get pods
